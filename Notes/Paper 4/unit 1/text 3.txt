Q3) Explain Variable Types in detail


      A variable is a place to store values. They can be manipulated throughout the program. When variables are created they reserve some memory space.

Perl Variable Declaration
     The equal sign (=) is used to assign values to variables. At the left of (=) is the variable name and on the right it is the value of the variable.
Example:
	1.	$name = "Anastasia";   
	2.	$rank = "9th";  
	3.	$marks = 756.5;  

There are three types of variables:

	•	 Scalar defined by $
	•	Arrays defined by @
	•	Hashes defined by %

   The same variable can be used for all these three types of variables in a program. For example, $name, @name and %name, all three variables will be considered different in a program.

	1.	Scalar Variable :
                A scalar is a single unit of data. That data might be an integer number, floating point, a character, a string, a paragraph, or an entire web page. Simply saying it could be anything, but only a single thing.
Example:
    #!/usr/bin/perl

$age = 25;             # An integer assignment
$name = "John Paul";   # A string 
$salary = 1445.50;     # A floating point

print "Age = $age\n";
print "Name = $name\n";
print "Salary = $salary\n";

Output:
Age = 25
Name = John Paul
Salary = 1445.5

	2.	Array Variable:
                 An array is a variable that stores an ordered list of scalar values. Array variables are preceded by an "at" (@) sign. To refer to a single element of an array, you will use the dollar sign ($) with the variable name followed by the index of the element in square brackets.

Example:
    #!/usr/bin/perl

@ages = (25, 30, 40);             
@names = ("John Paul", "Lisa", "Kumar");

print "\$ages[0] = $ages[0]\n";
print "\$ages[1] = $ages[1]\n";
print "\$ages[2] = $ages[2]\n";
print "\$names[0] = $names[0]\n";
print "\$names[1] = $names[1]\n";
print "\$names[2] = $names[2]\n";


Here we used escape sign (\) before the $ sign just to print it. Other Perl will understand it as a variable and will print its value. When executed, this will produce the following result −

Output:
$ages[0] = 25
$ages[1] = 30
$ages[2] = 40
$names[0] = John Paul
$names[1] = Lisa
$names[2] = Kumar

	3.	Hash Variable:
                  A hash is a set of key/value pairs. Hash variables are preceded by a percent (%) sign. To refer to a single element of a hash, you will use the hash variable name followed by the "key" associated with the value in curly brackets.

Example:

#!/usr/bin/perl

%data = ('John Paul', 45, 'Lisa', 30, 'Kumar', 40);

print "\$data{'John Paul'} = $data{'John Paul'}\n";
print "\$data{'Lisa'} = $data{'Lisa'}\n";
print "\$data{'Kumar'} = $data{'Kumar'}\n";

Output:
$data{'John Paul'} = 45
$data{'Lisa'} = 30
$data{'Kumar'} = 40
